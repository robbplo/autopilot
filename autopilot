#!/usr/bin/env php
<?php

foreach (array(__DIR__ . '/../../autoload.php', __DIR__ . '/../vendor/autoload.php', __DIR__ . '/vendor/autoload.php') as $file) {
    if (file_exists($file)) {
        require $file;
        break;
    }
}

use Autopilot\Apps\TextEditor;
use Autopilot\Drivers\Concerns\PerformsSetupTasks;
use Autopilot\ProjectClassifier;
use Autopilot\Repository;
use Autopilot\Runner;
use Composer\InstalledVersions;
use Symfony\Component\Console\Input\InputArgument;
use Symfony\Component\Console\Input\InputInterface;
use Symfony\Component\Console\Output\OutputInterface;
use Symfony\Component\Console\SingleCommandApplication;
use Symfony\Component\Console\Style\SymfonyStyle;

$version = InstalledVersions::getPrettyVersion('robbin/autopilot');

(new SingleCommandApplication())
    ->setName('Autopilot')
    ->setVersion($version)
    ->addArgument('repo-url', InputArgument::REQUIRED, 'The URL of repository to review')
    ->setCode(function (InputInterface $input, OutputInterface $output) use ($version) {
        $io = new SymfonyStyle($input, $output);
        $io->title("Autopilot - $version");

        $io->writeln("Cloning repository...");

        $repository = new Repository($input->getFirstArgument());
        $repository->clone();

        $driver = (new ProjectClassifier($repository))->selectDriver();
        $type = (new ReflectionClass($driver))->getShortName();

        $io->writeln("Identified project type: <options=bold>{$type}</>");

        // @todo allow user to select program
        $io->writeln('Opening text editor');
        (new TextEditor("code"))->open($repository->dir()->getPath());

        if ($driver instanceof PerformsSetupTasks) {
            $runner = new Runner($repository, $io);
            $runner->runTasks($driver->setupTasks());
        }
        //$driver->setUp();

        $io->section('Serving application');
        $driver->serve();
    })
    ->run();
